name: "deploy | frontend"

on:
  workflow_run:
    workflows: ["predeploy | frontend"]
    types: 
      - completed
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{github.repository}}-frontend
  WORKDIR: lab5/frontend

jobs:
  check-build-status:
    runs-on: ubuntu-latest
    steps:
      - name: verify build success
        env:
          BRANCH: ${{ github.event.workflow_run.head_branch }}
        run: |
          if [ "${{ github.event.workflow_run.conclusion }}" != "success" ]; then
            echo "Build failed, canceling publish"
            exit 1
          fi
  
  environment-set:
    outputs:
      branch: ${{ steps.extract-branch.outputs.branch }}
    runs-on: ubuntu-latest
    name: environment-set
    steps:

      - name: extract-branch
        shell: bash
        id: extract-branch
        run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

  publish:
    needs: check-build-status
    runs-on: ubuntu-latest
    
    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: setup docker buildx
        uses: docker/setup-buildx-action@v2
      
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      
      - name: extract meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        
      - name: publish
        uses: docker/build-push-action@v4
        with:
          context: ${{ env.WORKDIR }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: true

  deploy:
    runs-on: [ self-hosted, Linux, X64 ]
    needs: [publish, environment-set]
    steps:

      - name: login to docker
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.TOKEN }}
      
      - name: remove previous version
        continue-on-error: true
        run: |
          docker stop meow-client || true
          docker rm meow-client || true
      
      - name: redeploy
        run: |
          docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.environment-set.outputs.branch }}
          docker run \
            --name meow-client \
            -p 3000:3000 \
            -d \
            -t \
            --restart=unless-stopped \
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.environment-set.outputs.branch }}
